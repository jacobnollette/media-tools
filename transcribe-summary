#!/bin/bash

# Define the root directory to search recursively (current directory by default)
input_dir="${1:-.}"

split_lines="550"
split_overlap="50"

model="llama3.2:latest"
#model="llama3.2:8g-c16g"
#prompt_stage_1="Below is a section from a large transcript. Please summarize the excerpt, calling out any conceptual information, narrative themes, or analysis of the discussion as it unfolds.
#"

prompt_stage_1="summarize the following transcript text:
"

#prompt_stage_2="Below are a chunks of analysis from a complete transcript. They include conceptual information, narrative themes, and analysis of the discussion from the transcript. Please provide a chronological interpretation of the chunks. Please address the content from each piece of information, and filter the narrative tone of the finished analysis to reference the collection as a whole, and not each section.
#"
prompt_stage_2="combine the following separate summaries into a coherent summary.
List of summaries:
"

_process () {
  item="$@"
  item_base_name=$(basename -- "$item" | sed 's/\.vtt//')

  tmppath=$(mktemp -d)
  echo $tmppath
  cp "$item" $tmppath
  cd $tmppath

  file="$(ls)"
  total_lines=$(wc -l < "$file")

  start_line=1
  chunk_num=1

  while [ $start_line -le $total_lines ]; do
    end_line=$((start_line + split_lines -1))
    if [ $end_line -gt $total_lines ]; then
      end_line=$total_lines
    fi

    # Extract the chunk with overlap
    sed -n "${start_line},${end_line}p" "$file" > "split$(printf "%02d" $chunk_num)"
    
    # Check if we've reached the end of the file
    if [ $end_line -eq $total_lines ]; then
      break
    fi

    # Update start_line for the next chunk
    start_line=$((end_line - split_overlap +1))
    chunk_num=$((chunk_num+1))
  done

  for split in split*; do
    echo "$prompt_stage_1" > prompt
    cat "$split" >> prompt
    touch "$split-summary.md"
    cat prompt | ollama run $model > "$split-summary.md"
  done

  : > prompt
  echo "$prompt_stage_2" > prompt
  for summary in *summary.md; do
    cat "$summary" >> prompt
  done
  cat prompt | ollama run $model > "$item_base_name-summary.md"
  cp "$item_base_name-summary.md" "$start_path"

  cd $start_path

}

# Find all .vtt files in the specified input directory and its subdirectories
start_path="$(pwd)"
for i in *.vtt; do
  _process "$i"
done
